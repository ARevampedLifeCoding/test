{"version":3,"sources":["constants/actionTypes.js","reducers/auth.js","reducers/index.js","api/index.js","components/Auth/styles.js","App.js","index.js"],"names":["AUTH","LOGOUT","authReducer","state","authData","action","type","actionType","localStorage","setItem","JSON","stringify","data","loading","errors","clear","reducers","combineReducers","auth","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","root","margin","avatar","backgroundColor","palette","secondary","main","form","width","submit","googleButton","marginBottom","App","Container","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yLAMaA,EAAO,OACPC,EAAS,SCUPC,EAfK,WAAyC,IAAxCC,EAAuC,uDAA/B,CAAEC,SAAU,MAAQC,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKC,EAGH,OAFAC,aAAaC,QAAQ,UAAWC,KAAKC,UAAL,sBAAoBN,QAApB,IAAoBA,OAApB,EAAoBA,EAAQO,QAErD,2BAAKT,GAAZ,IAAmBC,SAAUC,EAAOO,KAAMC,SAAS,EAAOC,OAAQ,OACpE,KAAKP,EAGH,OAFAC,aAAaO,QAEN,2BAAKZ,GAAZ,IAAmBC,SAAU,KAAMS,SAAS,EAAOC,OAAQ,OAC7D,QACE,OAAOX,ICRAa,EAAWC,YAAgB,CAAGC,S,0HCHrCC,E,OAAMC,EAAMC,OAAO,CAAEC,QAAS,0BAEpCH,EAAII,aAAaC,QAAQC,KAAI,SAACC,GAK5B,OAJIlB,aAAamB,QAAQ,aACvBD,EAAIE,QAAQC,cAAZ,iBAAsCnB,KAAKoB,MAAMtB,aAAamB,QAAQ,YAAYI,QAG7EL,KAKF,I,YCZQM,aAAW,SAACC,GAAD,MAAY,CACpCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAASP,EAAMG,QAAQ,IAEzBK,KAAM,CACJ,uBAAwB,CACtBC,OAAQT,EAAMG,QAAQ,KAG1BO,OAAQ,CACND,OAAQT,EAAMG,QAAQ,GACtBQ,gBAAiBX,EAAMY,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPd,UAAWF,EAAMG,QAAQ,IAE3Bc,OAAQ,CACNR,OAAQT,EAAMG,QAAQ,EAAG,EAAG,IAE9Be,aAAc,CACZC,aAAcnB,EAAMG,QAAQ,Q,iDCHjBiB,EAdH,WACT,IACE,IACEC,EAAA,EACG,IACD,IACE,IACA,KCGLC,G,OAAQC,YAAYxC,EAAUyC,YAAQC,YAAgBC,QAE5DC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,U","file":"static/js/main.53b5fe16.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n","import * as actionType from '../constants/actionTypes';\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case actionType.AUTH:\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case actionType.LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\n\n\nimport auth from './auth';\n\nexport const reducers = combineReducers({  auth });","import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\n\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', \n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n\nimport Adopt from \"./components/Adopt/Adopt\";\nimport Auth from \"./components/Auth/Auth\";\nimport Nav from \"./components/Nav/Nav\";\n\nconst App = () => {\n  <Provider>\n    <Router>\n      <Container maxWidth=\"lg\">\n        < Nav />\n        <Routes>\n          <Route path=\"/\" exact component={Adopt} />\n          <Route path=\"/auth\" exact component={Auth} />\n        </Routes>\n      </Container>\n    </Router>\n   </Provider>\n};\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}